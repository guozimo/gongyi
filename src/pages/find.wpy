<template>
<view>
  <map
    id="storeMap"
    longitude="{{longitude}}"
    latitude="{{latitude}}"
    scale="{{scale}}"
    controls="{{controls}}"
    bindcontroltap="controltap"
    markers="{{markers}}"
    bindregionchange="regionchange"
    show-location> 
  </map>
  <cover-view class="weather">
    <cover-view>
      <cover-image class="weather-icon" src="/images/city.png" />
      <cover-view class="weather-text">{{weather.currentCity}}</cover-view>
    </cover-view>
    <cover-view>
      <cover-image class="weather-icon" src="/images/temperature.png" />
      <cover-view class="weather-text">{{weather.temperature}}</cover-view>
    </cover-view>
    <cover-view>
      <cover-image class="weather-icon" src="/images/weather.png" />
      <cover-view class="weather-text">{{weather.weatherDesc}}</cover-view>
    </cover-view>
  </cover-view>
</view>
</template>

<script>
import wepy from 'wepy'
import bmap from '@/utils/bmap/bmap-wx.min.js'
const BMap = new bmap.BMapWX({
  ak: 'wMbTUuWRdnKfBi1tbFXzyoQUBVSgsjOp'  // 百度地图的 AK
})
const CONTROLS = {
  LOCATION: 1,
  MARKER: 2
}

const MAP_SCALE = {
  MAX: 18,
  DEFAULT: 16
}
export default class Index extends wepy.page {
  onShareAppMessage() {
    return {
      title: '为公公益是你我的家园!',
      imageUrl: 'http://39.105.91.188/static/image/fm.jpg',
      path: `/pages/index`
    }
  }
  config = {
    navigationBarTitleText: '发现'
  }
  components = {
  }

  data = {
    scale: MAP_SCALE.DEFAULT,
    latitude: 39.908860,
    longitude: 116.397390,
    markers: [],
    weather: {},
    appAuth: false,   // 小程序定位权限
    wxAuth: false     // 微信定位权限
  }

  computed = {
  }

  methods = {
  }

  events = {
  }
  onLoad() {
    this.setControls()
  }
  onShow() {
    this.scale = MAP_SCALE.DEFAULT
    this.mapCtx = wx.createMapContext('storeMap')
    this.getCurrentLocation()
  }
  /**
   * 设置控件
   */
  setControls() {
    wx.getSystemInfo({
      success: (res) => {
        this.controls = [{
          id: CONTROLS.LOCATION,
          iconPath: '/images/location.png',
          position: {
            left: 30,
            top: res.windowHeight - 120,
            width: 65,
            height: 65
          },
          clickable: true
        }, {
          id: CONTROLS.MARKER,
          iconPath: '/images/marker.png',
          position: {
            left: res.windowWidth / 2 - 11,
            top: res.windowHeight / 2 - 35,
            width: 22,
            height: 34
          },
          clickable: false
        }]
        this.$apply()
      }
    })
  }

  /**
   * 获取当前位置
   */
  getCurrentLocation() {
    wx.getLocation({
      type: 'gcj02',
      success: (res) => {
        this.latitude = res.latitude
        this.longitude = res.longitude
        this.appAuth = true
        this.wxAuth = true
        this.$apply()
        this.showWeather()
      },
      fail: (err) => {
        // 小程序获取定位权限失败
        if (this.noAppLocationAuth(err.errMsg)) {
          this.showAppLocationFail()
        }

        // 微信获取定位权限失败
        if (this.noWxLocationAuth(err.errMsg)) {
         // this.setData({ appAuth: true })  // 此时小程序定位权限应该已获取
          this.appAuth = true
          this.$apply()
          this.showWxLocationFail()
        }
      }
    })
  }

  /**
   * 小程序没有定位权限
   *
   * @param {string} msg
   * @return {boolean}
   */
  noAppLocationAuth(msg) {
    return msg.includes('fail auth deny')
  }

  /**
   * 微信没有定位权限
   *
   * @param {string} msg
   * @return {boolean}
   */
  noWxLocationAuth(msg) {
    return msg.includes('fail 1')
  }

  /**
   * 获取小程序定位权限失败的弹窗
   */
  showAppLocationFail() {
    wx.showModal({
      title: '定位失败',
      content: '请允许小程序使用定位服务',
      confirmText: '获取',
      success: (res) => {
        if (res.confirm) {
          this.getAppLocationAuth()
        }
      }
    })
  }

  /**
   * 获取小程序定位权限
   */
  getAppLocationAuth() {
    wx.openSetting({
      success: (res) => {
        if (res.authSetting['scope.userLocation']) {
          // this.setData({ appAuth: true })
          this.appAuth = true
          this.$apply()
        }
      }
    })
  }

  /**
   * 获取微信定位权限失败的弹窗
   */
  showWxLocationFail() {
    wx.showModal({
      title: '定位失败',
      content: '请到手机系统中打开微信的定位服务',
      showCancel: false,
      confirmText: '知道了'
    })
  }

  /**
   * 显示附近的便利店
   *
   * @param {object} location
   */
  showStores(location) {
    BMap.search({
      query: '助残机构',
      location: `${location.latitude},${location.longitude}`,
      success: (res) => {
        if (res.originalData.results.length) {
          this.setMarkers(res.originalData.results)
        } else {
          this.showToast('没有搜索到您附近的助残机构')
        }
      },
      fail: () => {
        this.showToast('网络出了点问题，请稍后再试')
        // this.showToast(JSON.stringify(err));
      }
    })
  }

  /**
   * 显示天气
   */
  showWeather() {
    BMap.weather({
      success: (data) => {
        const weatherData = data.currentWeather[0]
        // this.setData({
        //   weather: {
        //     currentCity: weatherData.currentCity,
        //     temperature: weatherData.temperature.replace(/\s/g, ''),
        //     weatherDesc: weatherData.weatherDesc
        //   }
        // })
        this.weather = {
          currentCity: weatherData.currentCity,
          temperature: weatherData.temperature.replace(/\s/g, ''),
          weatherDesc: weatherData.weatherDesc
        }
        this.$apply()
      }
    })
  }

  /**
  * 显示没有搜索到便利店的提示
  *
  * @param {string} msg
  */
  showToast(msg) {
    wx.showToast({
      title: msg,
      icon: 'none',
      duration: 1000
    })
  }

  /**
   * 设置附近便利店的标记
   *
   * @param {array} stores
   */
  setMarkers(stores) {
    const markers = []

    for (let i = 0; i < stores.length; i++) {
      stores[i].name = this.getShortStoreName(stores[i].name)
      markers.push({
        id: i,
        latitude: stores[i].location.lat,
        longitude: stores[i].location.lng,
        title: stores[i].name,
        iconPath: '/images/store.png',
        width: 50,
        height: 50,
        callout: {
          content: stores[i].name,
          color: '#ffffff',
          fontSize: 14,
          borderRadius: 16,
          bgColor: '#262930',
          padding: 8
        }
      })
    }

   // this.setData({ markers: markers })
    this.markers = markers
  }

  /**
   * 获取商家的短名称（去掉括号）
   *
   * @param {string} name
   * @return {string}
   */
  getShortStoreName(name) {
    return name.replace(/(\([^)]+\))/, '')
  }

  /**
   * 定位控件点击事件
   *
   * @param {any} e
   */
  controltap(e) {
    if (e.controlId === CONTROLS.LOCATION) {
      if (!this.data.appAuth) {
        return this.showAppLocationFail()
      }

      if (!this.data.wxAuth) {
        return this.showWxLocationFail()
      }

      this.mapCtx.moveToLocation()
    }
  }

  /**
   * 地图视野变化事件
   *
   * @param {any} e
   */
  regionchange(e) {
    if (e.type === 'end' && this.hasLocationAuth()) {
      this.mapCtx.getCenterLocation({
        success: (res) => {
          this.showStores(res)
        }
      })
    }
  }

  /**
   * 是否拥有微信以及小程序的定位权限
   *
   * @return {boolean}
   */
  hasLocationAuth() {
    return this.data.appAuth && this.data.wxAuth
  }
}
</script>

<style lang="less">
.container {
  position: relative;
  width: 100%;
  height: 100vh;
}

#storeMap {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}

.weather {
  position: absolute;
  width: 18%;
  top: 1%;
  left: 2%;
  background: #fff;
  padding: 10rpx;
  font-size: 20rpx;
  border-radius: 25rpx;
  opacity: 0.8;
  color: #000;
}

.weather-icon {
  width: 30rpx; 
  height: 30rpx;
  float: left;
  padding: 6rpx;
}

.weather-text {
  margin-top: 10rpx;
  margin-left: 45rpx;
}

</style>
